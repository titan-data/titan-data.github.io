hero:
  - image: /img/envoy-logo.svg
    headline: Your code. Your environment. Your data.

why-envoy:
  - "As on the ground microservice practitioners quickly realize, the majority of operational problems that arise when
  moving to a distributed architecture are ultimately grounded in two areas: networking and observability. It is simply
  an orders of magnitude larger problem to network and debug a set of intertwined distributed services versus a single
  monolithic application."

  - "Originally built at <strong>Lyft</strong>, Envoy is a high performance C++ distributed proxy designed for single
  services and applications, as well as a communication bus and “universal data plane” designed for large microservice
  “service mesh” architectures. Built on the learnings of solutions such as NGINX, HAProxy, hardware load balancers,
  and cloud load balancers, Envoy runs alongside every application and abstracts the network by providing common
  features in a platform-agnostic manner. When all service traffic in an infrastructure flows via an Envoy mesh, it
  becomes easy to visualize problem areas via consistent observability, tune overall performance, and add substrate features in a single place."

features:
  - name: Out of process architecture
    description: Envoy is a self contained, high performance server with a small memory footprint. It runs alongside any application language or framework.

  - name: HTTP/2 and gRPC support
    description: Envoy has first class support for HTTP/2 and gRPC for both incoming and outgoing connections. It is a transparent HTTP/1.1 to HTTP/2 proxy.

  - name: Advanced load balancing
    description: Envoy supports advanced load balancing features including automatic retries, circuit breaking, global rate limiting, request shadowing, zone local load balancing, etc.

  - name: APIs for configuration management
    description: Envoy provides robust APIs for dynamically managing its configuration.

  - name: Observability
    description: Deep observability of L7 traffic, native support for distributed tracing, and wire-level observability of MongoDB, DynamoDB, and more.
